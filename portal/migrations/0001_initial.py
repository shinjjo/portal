# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-11-03 13:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.IntegerField(db_column='Admin_ID', primary_key=True, serialize=False)),
                ('admin_role', models.CharField(db_column='Admin_Role', max_length=19)),
            ],
            options={
                'db_table': 'Admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BelongsTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(db_column='Member_ID')),
                ('join_date', models.DateField(db_column='Join_Date')),
            ],
            options={
                'db_table': 'Belongs_to',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('books_id', models.AutoField(db_column='Books_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Books',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('club_id', models.AutoField(db_column='Club_ID', primary_key=True, serialize=False)),
                ('club_rep', models.CharField(db_column='Club_Rep', max_length=30)),
                ('club_name', models.CharField(db_column='Club_Name', max_length=50)),
                ('club_contact', models.CharField(blank=True, db_column='Club_Contact', max_length=14, null=True)),
                ('club_email', models.CharField(db_column='Club_Email', max_length=60)),
                ('club_description', models.TextField(blank=True, db_column='Club_Description', null=True)),
            ],
            options={
                'db_table': 'Club',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enquiry_id', models.IntegerField(db_column='Enquiry_ID')),
                ('responding_club_id', models.IntegerField(db_column='Responding_Club_ID')),
                ('request_id', models.IntegerField(db_column='Request_ID')),
            ],
            options={
                'db_table': 'Enquiry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(db_column='Event_ID', primary_key=True, serialize=False)),
                ('event_title', models.CharField(db_column='Event_Title', max_length=50)),
                ('venue_id', models.IntegerField(db_column='Venue_ID')),
                ('event_date', models.DateField(db_column='Event_Date')),
                ('event_starttime', models.TimeField(db_column='Event_Starttime')),
                ('event_endtime', models.TimeField(db_column='Event_Endtime')),
                ('club_id', models.IntegerField(db_column='Club_ID')),
            ],
            options={
                'db_table': 'Event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalRequest',
            fields=[
                ('external_request_id', models.AutoField(db_column='External_Request_ID', primary_key=True, serialize=False)),
                ('club_id', models.IntegerField(db_column='Club_ID')),
                ('names', models.CharField(db_column='NAMES', max_length=55)),
                ('email', models.IntegerField(db_column='Email')),
                ('contact_number', models.CharField(db_column='Contact_Number', max_length=20)),
                ('description', models.CharField(db_column='Description', max_length=300)),
                ('surname', models.CharField(db_column='Surname', max_length=55)),
            ],
            options={
                'db_table': 'External_Request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoesTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(db_column='Member_ID')),
            ],
            options={
                'db_table': 'Goes_to',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Has',
            fields=[
                ('clubid', models.IntegerField(db_column='ClubID')),
                ('venue_id', models.IntegerField(db_column='Venue_ID')),
                ('event_id', models.IntegerField(db_column='Event_ID')),
                ('has_id', models.IntegerField(db_column='HAS_ID', primary_key=True, serialize=False)),
                ('starttime', models.TimeField(db_column='Starttime')),
                ('endtime', models.TimeField(db_column='Endtime')),
                ('dayoftheweek', models.DateField(db_column='Dayoftheweek')),
            ],
            options={
                'db_table': 'Has',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Holds',
            fields=[
                ('holds_id', models.AutoField(db_column='Holds_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Holds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Isdirectedto',
            fields=[
                ('isdirectedto_id', models.AutoField(db_column='isDirectedTo_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'IsDirectedTo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JoinRequest',
            fields=[
                ('join_requst_id', models.AutoField(db_column='Join_Requst_ID', primary_key=True, serialize=False)),
                ('reason', models.CharField(db_column='Reason', max_length=55)),
                ('previous_experience', models.TextField(db_column='Previous_Experience')),
                ('member_id', models.IntegerField(db_column='Member_ID')),
                ('request_id', models.IntegerField(db_column='Request_ID')),
            ],
            options={
                'db_table': 'Join_Request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LeisureFacility',
            fields=[
                ('venue_id', models.AutoField(db_column='Venue_ID', primary_key=True, serialize=False)),
                ('facility_purpose', models.CharField(blank=True, db_column='Facility_Purpose', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Leisure_Facility',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('login_id', models.AutoField(db_column='Login_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=20)),
                ('password', models.CharField(db_column='Password', max_length=20)),
            ],
            options={
                'db_table': 'Login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('make_id', models.AutoField(db_column='Make_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Make',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('member_id', models.AutoField(db_column='Member_ID', primary_key=True, serialize=False)),
                ('member_lastname', models.CharField(db_column='Member_Lastname', max_length=30)),
                ('member_firstname', models.CharField(db_column='Member_Firstname', max_length=30)),
                ('member_email', models.CharField(db_column='Member_Email', max_length=50)),
                ('member_address', models.CharField(db_column='Member_Address', max_length=100)),
                ('member_type', models.CharField(db_column='Member_Type', max_length=13)),
                ('member_mobile', models.CharField(db_column='Member_Mobile', max_length=20)),
            ],
            options={
                'db_table': 'Member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('pays_id', models.AutoField(db_column='Pays_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Pays',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.AutoField(db_column='Request_ID', primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(db_column='Member_ID')),
                ('club_id', models.IntegerField(db_column='Club_ID')),
                ('description', models.CharField(db_column='Description', max_length=300)),
                ('request_date', models.DateField(db_column='Request_Date')),
            ],
            options={
                'db_table': 'Request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Retrieves',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(db_column='Member_ID')),
            ],
            options={
                'db_table': 'Retrieves',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('subscription_id', models.AutoField(db_column='Subscription_ID', primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(db_column='Member_ID')),
                ('club_id', models.IntegerField(db_column='Club_ID')),
                ('amount', models.IntegerField(db_column='Amount')),
                ('academic_year', models.IntegerField(db_column='Academic_Year')),
                ('semester', models.CharField(db_column='Semester', max_length=6)),
                ('last_payment_date', models.DateTimeField(db_column='Last_Payment_Date')),
            ],
            options={
                'db_table': 'Subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venue_id', models.AutoField(db_column='Venue_ID', primary_key=True, serialize=False)),
                ('venue_name', models.CharField(db_column='Venue_Name', max_length=30)),
                ('club_id', models.IntegerField(db_column='Club_ID')),
                ('event_id', models.IntegerField(db_column='Event_ID')),
            ],
            options={
                'db_table': 'Venue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasA',
            fields=[
                ('has_a', models.ForeignKey(db_column='Has_A_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='portal.Club')),
                ('eventid', models.IntegerField(db_column='EventID')),
                ('venue_id', models.IntegerField(db_column='Venue_ID')),
                ('club_id', models.IntegerField(db_column='Club_ID')),
            ],
            options={
                'db_table': 'Has_A',
                'managed': False,
            },
        ),
    ]
